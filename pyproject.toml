[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
name = "trio"
version = "0.22.0"
authors = [{name = "Nathaniel J. Smith", email = "njs@pobox.com"}]
license = {text = "MIT OR Apache-2.0"}
description = "A friendly Python library for async concurrency and I/O"
readme = "README.rst"
keywords = ["async", "io", "networking", "trio"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: BSD",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: System :: Networking",
    "Framework :: Trio",
]
urls = {Homepage = "https://github.com/python-trio/trio"}
requires-python = ">=3.7"
dependencies = [
    "attrs >= 19.2.0",
    "sortedcontainers",
    "async_generator >= 1.9",
    "idna",
    "outcome",
    "sniffio",
    # cffi 1.12 adds from_buffer(require_writable=True) and ffi.release()
    # cffi 1.14 fixes memory leak inside ffi.getwinerror()
    # cffi is required on Windows, except on PyPy where it is built-in
    "cffi>=1.14; os_name == 'nt' and implementation_name != 'pypy'",
    "exceptiongroup >= 1.0.0rc9; python_version < '3.11'",
]

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages]
find = {namespaces = false}

[tool.black]
target-version = ['py37']


[tool.towncrier]
# Usage:
# - PRs should drop a file like "issuenumber.feature" in newsfragments
#   (or "bugfix", "doc", "removal", "misc"; misc gets no text, we can
#    customize this)
# - At release time after bumping version number, run: towncrier
#   (or towncrier --draft)
package = "trio"
filename = "docs/source/history.rst"
directory = "newsfragments"
underlines = ["-", "~", "^"]
issue_format = "`#{issue} <https://github.com/python-trio/trio/issues/{issue}>`__"

[[tool.towncrier.type]]
directory = "headline"
name = "Headline features"
showcontent = true

[[tool.towncrier.type]]
directory = "breaking"
name = "Breaking changes"
showcontent = true

[[tool.towncrier.type]]
directory = "feature"
name = "Features"
showcontent = true

[[tool.towncrier.type]]
directory = "bugfix"
name = "Bugfixes"
showcontent = true

[[tool.towncrier.type]]
directory = "doc"
name = "Improved documentation"
showcontent = true

[[tool.towncrier.type]]
directory = "deprecated"
name = "Deprecations and removals"
showcontent = true

[[tool.towncrier.type]]
directory = "misc"
name = "Miscellaneous internal changes"
showcontent = true

[tool.pytest.ini_options]
addopts = ["--strict-markers", "--strict-config"]
xfail_strict = true
faulthandler_timeout = 60
markers = ["redistributors_should_skip: tests that should be skipped by downstream redistributors"]
junit_family = "xunit2"
filterwarnings = ["error"]
